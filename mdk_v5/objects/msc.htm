<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\objects\msc.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\objects\msc.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 6190004: Last Updated: Wed Dec 13 16:50:39 2023
<BR><P>
<H3>Maximum Stack Usage =        120 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
class_out_handler &rArr; bot_scsi_dataout_handler &rArr; bot_cbw_decode &rArr; bot_scsi_cmd_process &rArr; bot_scsi_write10 &rArr; msc_disk_write
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[7d]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[61]">ACC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[61]">ACC_IRQHandler</a><BR>
 <LI><a href="#[17]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[17]">BusFault_Handler</a><BR>
 <LI><a href="#[15]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[15]">HardFault_Handler</a><BR>
 <LI><a href="#[16]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[16]">MemManage_Handler</a><BR>
 <LI><a href="#[18]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[18]">UsageFault_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[61]">ACC_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[2f]">ADC1_2_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[4c]">ADC3_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[17]">BusFault_Handler</a> from at32f403a_407_int.o(.text.BusFault_Handler) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[32]">CAN1_RX1_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[33]">CAN1_SE_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[5e]">CAN2_RX0_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[5f]">CAN2_RX1_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[60]">CAN2_SE_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[5d]">CAN2_TX_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[22]">CRM_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[28]">DMA1_Channel1_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[29]">DMA1_Channel2_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[2a]">DMA1_Channel3_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[2b]">DMA1_Channel4_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[2c]">DMA1_Channel5_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[2d]">DMA1_Channel6_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[2e]">DMA1_Channel7_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[55]">DMA2_Channel1_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[56]">DMA2_Channel2_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[57]">DMA2_Channel3_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[58]">DMA2_Channel4_5_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[64]">DMA2_Channel6_7_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[1a]">DebugMon_Handler</a> from at32f403a_407_int.o(.text.DebugMon_Handler) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[68]">EMAC_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[69]">EMAC_WKUP_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[23]">EXINT0_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[45]">EXINT15_10_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[24]">EXINT1_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[25]">EXINT2_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[26]">EXINT3_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[27]">EXINT4_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[34]">EXINT9_5_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[21]">FLASH_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[15]">HardFault_Handler</a> from at32f403a_407_int.o(.text.HardFault_Handler) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[3d]">I2C1_ERR_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[3c]">I2C1_EVT_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[3f]">I2C2_ERR_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[3e]">I2C2_EVT_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[5b]">I2C3_ERR_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[5a]">I2C3_EVT_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[16]">MemManage_Handler</a> from at32f403a_407_int.o(.text.MemManage_Handler) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[14]">NMI_Handler</a> from at32f403a_407_int.o(.text.NMI_Handler) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[1e]">PVM_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[1b]">PendSV_Handler</a> from at32f403a_407_int.o(.text.PendSV_Handler) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[46]">RTCAlarm_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[20]">RTC_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[13]">Reset_Handler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[4e]">SDIO1_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[59]">SDIO2_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[40]">SPI1_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[41]">SPI2_I2S2EXT_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[50]">SPI3_I2S3EXT_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[5c]">SPI4_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[19]">SVC_Handler</a> from at32f403a_407_int.o(.text.SVC_Handler) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[1c]">SysTick_Handler</a> from at32f403a_407_int.o(.text.SysTick_Handler) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[6a]">SystemInit</a> from system_at32f403a_407.o(.text.SystemInit) referenced from startup_at32f403a_407.o(.text)
 <LI><a href="#[1f]">TAMPER_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[35]">TMR1_BRK_TMR9_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[38]">TMR1_CH_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[36]">TMR1_OVF_TMR10_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[37]">TMR1_TRG_HALL_TMR11_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[39]">TMR2_GLOBAL_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[3a]">TMR3_GLOBAL_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[3b]">TMR4_GLOBAL_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[4f]">TMR5_GLOBAL_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[53]">TMR6_GLOBAL_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[54]">TMR7_GLOBAL_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[48]">TMR8_BRK_TMR12_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[4b]">TMR8_CH_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[49]">TMR8_OVF_TMR13_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[4a]">TMR8_TRG_HALL_TMR14_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[51]">UART4_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[52]">UART5_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[66]">UART7_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[67]">UART8_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[42]">USART1_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[43]">USART2_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[44]">USART3_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[65]">USART6_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[47]">USBFSWakeUp_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[30]">USBFS_H_CAN1_TX_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[31]">USBFS_L_CAN1_RX0_IRQHandler</a> from main.o(.text.USBFS_L_CAN1_RX0_IRQHandler) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[62]">USBFS_MAPH_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[63]">USBFS_MAPL_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[18]">UsageFault_Handler</a> from at32f403a_407_int.o(.text.UsageFault_Handler) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[1d]">WWDT_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[4d]">XMC_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[6b]">__main</a> from __main.o(!!!main) referenced from startup_at32f403a_407.o(.text)
 <LI><a href="#[1]">class_clear_handler</a> from msc_class.o(.text.class_clear_handler) referenced 2 times from msc_class.o(.data.msc_class_handler)
 <LI><a href="#[4]">class_ept0_rx_handler</a> from msc_class.o(.text.class_ept0_rx_handler) referenced 2 times from msc_class.o(.data.msc_class_handler)
 <LI><a href="#[3]">class_ept0_tx_handler</a> from msc_class.o(.text.class_ept0_tx_handler) referenced 2 times from msc_class.o(.data.msc_class_handler)
 <LI><a href="#[8]">class_event_handler</a> from msc_class.o(.text.class_event_handler) referenced 2 times from msc_class.o(.data.msc_class_handler)
 <LI><a href="#[5]">class_in_handler</a> from msc_class.o(.text.class_in_handler) referenced 2 times from msc_class.o(.data.msc_class_handler)
 <LI><a href="#[0]">class_init_handler</a> from msc_class.o(.text.class_init_handler) referenced 2 times from msc_class.o(.data.msc_class_handler)
 <LI><a href="#[6]">class_out_handler</a> from msc_class.o(.text.class_out_handler) referenced 2 times from msc_class.o(.data.msc_class_handler)
 <LI><a href="#[2]">class_setup_handler</a> from msc_class.o(.text.class_setup_handler) referenced 2 times from msc_class.o(.data.msc_class_handler)
 <LI><a href="#[7]">class_sof_handler</a> from msc_class.o(.text.class_sof_handler) referenced 2 times from msc_class.o(.data.msc_class_handler)
 <LI><a href="#[12]">get_device_config_string</a> from msc_desc.o(.text.get_device_config_string) referenced 2 times from msc_desc.o(.data.msc_desc_handler)
 <LI><a href="#[b]">get_device_configuration</a> from msc_desc.o(.text.get_device_configuration) referenced 2 times from msc_desc.o(.data.msc_desc_handler)
 <LI><a href="#[9]">get_device_descriptor</a> from msc_desc.o(.text.get_device_descriptor) referenced 2 times from msc_desc.o(.data.msc_desc_handler)
 <LI><a href="#[11]">get_device_interface_string</a> from msc_desc.o(.text.get_device_interface_string) referenced 2 times from msc_desc.o(.data.msc_desc_handler)
 <LI><a href="#[d]">get_device_lang_id</a> from msc_desc.o(.text.get_device_lang_id) referenced 2 times from msc_desc.o(.data.msc_desc_handler)
 <LI><a href="#[e]">get_device_manufacturer_string</a> from msc_desc.o(.text.get_device_manufacturer_string) referenced 2 times from msc_desc.o(.data.msc_desc_handler)
 <LI><a href="#[c]">get_device_other_speed</a> from msc_desc.o(.text.get_device_other_speed) referenced 2 times from msc_desc.o(.data.msc_desc_handler)
 <LI><a href="#[f]">get_device_product_string</a> from msc_desc.o(.text.get_device_product_string) referenced 2 times from msc_desc.o(.data.msc_desc_handler)
 <LI><a href="#[a]">get_device_qualifier</a> from msc_desc.o(.text.get_device_qualifier) referenced 2 times from msc_desc.o(.data.msc_desc_handler)
 <LI><a href="#[10]">get_device_serial_string</a> from msc_desc.o(.text.get_device_serial_string) referenced 2 times from msc_desc.o(.data.msc_desc_handler)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[6b]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(.text)
</UL>
<P><STRONG><a name="[6c]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[6e]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[d2]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[d3]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[d4]"></a>__decompress</STRONG> (Thumb, 90 bytes, Stack size unknown bytes, __dczerorl2.o(!!dczerorl2), UNUSED)

<P><STRONG><a name="[d5]"></a>__decompress1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(!!dczerorl2), UNUSED)

<P><STRONG><a name="[d6]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[74]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[6f]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000001))
<BR><BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_init
</UL>

<P><STRONG><a name="[d7]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[d8]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[d9]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[da]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[db]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000034))

<P><STRONG><a name="[dc]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[dd]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[de]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[df]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[e0]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[e1]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[e2]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[e3]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[e4]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[e5]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000006))

<P><STRONG><a name="[e6]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000010))

<P><STRONG><a name="[e7]"></a>__rt_lib_init_relocate_pie_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[e8]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000035))

<P><STRONG><a name="[e9]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[ea]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000027))

<P><STRONG><a name="[eb]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[79]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[ec]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[ed]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000007))

<P><STRONG><a name="[ee]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[ef]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000010))

<P><STRONG><a name="[f0]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A))

<P><STRONG><a name="[f1]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[f2]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[6d]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[f3]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[71]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[73]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[f4]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[75]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; at32_board_init &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[f5]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[7e]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[78]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[f6]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[7a]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[13]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[61]"></a>ACC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>ADC1_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>ADC3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>CAN1_SE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[5e]"></a>CAN2_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[5f]"></a>CAN2_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[60]"></a>CAN2_SE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[5d]"></a>CAN2_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>CRM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>DMA1_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>DMA1_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>DMA1_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>DMA1_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>DMA1_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>DMA1_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>DMA2_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>DMA2_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>DMA2_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>DMA2_Channel4_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[64]"></a>DMA2_Channel6_7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[68]"></a>EMAC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[69]"></a>EMAC_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>EXINT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>EXINT15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>EXINT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>EXINT2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>EXINT3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>EXINT4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>EXINT9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>I2C1_ERR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>I2C1_EVT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>I2C2_ERR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>I2C2_EVT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[5b]"></a>I2C3_ERR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>I2C3_EVT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>PVM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>RTCAlarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>SDIO1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>SDIO2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>SPI2_I2S2EXT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>SPI3_I2S3EXT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[5c]"></a>SPI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>TAMPER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>TMR1_BRK_TMR9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>TMR1_CH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>TMR1_OVF_TMR10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>TMR1_TRG_HALL_TMR11_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>TMR2_GLOBAL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>TMR3_GLOBAL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>TMR4_GLOBAL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>TMR5_GLOBAL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>TMR6_GLOBAL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>TMR7_GLOBAL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>TMR8_BRK_TMR12_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>TMR8_CH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>TMR8_OVF_TMR13_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>TMR8_TRG_HALL_TMR14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[66]"></a>UART7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[67]"></a>UART8_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[65]"></a>USART6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>USBFSWakeUp_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>USBFS_H_CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[62]"></a>USBFS_MAPH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[63]"></a>USBFS_MAPL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>WWDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>XMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[7d]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_at32f403a_407.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[f7]"></a>__use_no_semihosting</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi_2.o(.text), UNUSED)

<P><STRONG><a name="[f8]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[f9]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[fa]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[fb]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[fc]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[72]"></a>__user_setup_stackheap</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[77]"></a>exit</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[fd]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[7c]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[fe]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[17]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at32f403a_407_int.o(.text.BusFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at32f403a_407_int.o(.text.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at32f403a_407_int.o(.text.HardFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at32f403a_407_int.o(.text.MemManage_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at32f403a_407_int.o(.text.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at32f403a_407_int.o(.text.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at32f403a_407_int.o(.text.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at32f403a_407_int.o(.text.SysTick_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[6a]"></a>SystemInit</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, system_at32f403a_407.o(.text.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(.text)
</UL>
<P><STRONG><a name="[31]"></a>USBFS_L_CAN1_RX0_IRQHandler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, main.o(.text.USBFS_L_CAN1_RX0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = USBFS_L_CAN1_RX0_IRQHandler &rArr; usbd_irq_handler &rArr; usbd_eptn_handler &rArr; usbd_core_setup_handler &rArr; usbd_interface_request &rArr; usbd_ctrl_send_status &rArr; usbd_ept_send
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_irq_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at32f403a_407_int.o(.text.UsageFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[7b]"></a>_sys_exit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at32f403a_407_board.o(.text._sys_exit))
<BR><BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[b9]"></a>acc_calibration_mode_enable</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, at32f403a_407_acc.o(.text.acc_calibration_mode_enable))
<BR><BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_clock48m_select
</UL>

<P><STRONG><a name="[b6]"></a>acc_write_c1</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, at32f403a_407_acc.o(.text.acc_write_c1))
<BR><BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_clock48m_select
</UL>

<P><STRONG><a name="[b7]"></a>acc_write_c2</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, at32f403a_407_acc.o(.text.acc_write_c2))
<BR><BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_clock48m_select
</UL>

<P><STRONG><a name="[b8]"></a>acc_write_c3</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, at32f403a_407_acc.o(.text.acc_write_c3))
<BR><BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_clock48m_select
</UL>

<P><STRONG><a name="[80]"></a>at32_board_init</STRONG> (Thumb, 276 bytes, Stack size 32 bytes, at32f403a_407_board.o(.text.at32_board_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = at32_board_init &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_clock_source_config
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_default_para_init
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_periph_clock_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[85]"></a>bot_cbw_decode</STRONG> (Thumb, 266 bytes, Stack size 24 bytes, msc_bot_scsi.o(.text.bot_cbw_decode))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = bot_cbw_decode &rArr; bot_scsi_cmd_process &rArr; bot_scsi_write10 &rArr; msc_disk_write
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bot_scsi_send_data
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bot_scsi_send_csw
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bot_scsi_cmd_process
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_get_recv_len
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_set_stall
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ept_recv
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bot_scsi_dataout_handler
</UL>

<P><STRONG><a name="[8c]"></a>bot_scsi_clear_feature</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, msc_bot_scsi.o(.text.bot_scsi_clear_feature))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = bot_scsi_clear_feature &rArr; usbd_ept_send
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_set_stall
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ept_recv
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ept_send
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;class_setup_handler
</UL>

<P><STRONG><a name="[89]"></a>bot_scsi_cmd_process</STRONG> (Thumb, 692 bytes, Stack size 16 bytes, msc_bot_scsi.o(.text.bot_scsi_cmd_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = bot_scsi_cmd_process &rArr; bot_scsi_write10 &rArr; msc_disk_write
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msc_disk_capacity
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_inquiry
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bot_scsi_write10
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bot_scsi_read10
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bot_cbw_decode
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bot_scsi_dataout_handler
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bot_scsi_datain_handler
</UL>

<P><STRONG><a name="[92]"></a>bot_scsi_datain_handler</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, msc_bot_scsi.o(.text.bot_scsi_datain_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = bot_scsi_datain_handler &rArr; bot_scsi_cmd_process &rArr; bot_scsi_write10 &rArr; msc_disk_write
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bot_scsi_cmd_process
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ept_recv
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ept_send
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;class_in_handler
</UL>

<P><STRONG><a name="[93]"></a>bot_scsi_dataout_handler</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, msc_bot_scsi.o(.text.bot_scsi_dataout_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = bot_scsi_dataout_handler &rArr; bot_cbw_decode &rArr; bot_scsi_cmd_process &rArr; bot_scsi_write10 &rArr; msc_disk_write
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bot_cbw_decode
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bot_scsi_cmd_process
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ept_recv
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ept_send
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;class_out_handler
</UL>

<P><STRONG><a name="[94]"></a>bot_scsi_init</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, msc_bot_scsi.o(.text.bot_scsi_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = bot_scsi_init
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ept_recv
</UL>
<BR>[Called By]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;class_init_handler
</UL>

<P><STRONG><a name="[90]"></a>bot_scsi_read10</STRONG> (Thumb, 254 bytes, Stack size 32 bytes, msc_bot_scsi.o(.text.bot_scsi_read10))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = bot_scsi_read10 &rArr; usbd_ept_send
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msc_disk_read
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ept_send
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bot_scsi_cmd_process
</UL>

<P><STRONG><a name="[96]"></a>bot_scsi_reset</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, msc_bot_scsi.o(.text.bot_scsi_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = bot_scsi_reset
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ept_recv
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;class_setup_handler
</UL>

<P><STRONG><a name="[8b]"></a>bot_scsi_send_csw</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, msc_bot_scsi.o(.text.bot_scsi_send_csw))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = bot_scsi_send_csw &rArr; usbd_ept_send
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ept_recv
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ept_send
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bot_cbw_decode
</UL>

<P><STRONG><a name="[8a]"></a>bot_scsi_send_data</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, msc_bot_scsi.o(.text.bot_scsi_send_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = bot_scsi_send_data &rArr; usbd_ept_send
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ept_send
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bot_cbw_decode
</UL>

<P><STRONG><a name="[91]"></a>bot_scsi_write10</STRONG> (Thumb, 358 bytes, Stack size 32 bytes, msc_bot_scsi.o(.text.bot_scsi_write10))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = bot_scsi_write10 &rArr; msc_disk_write
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msc_disk_write
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ept_recv
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ept_send
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bot_scsi_cmd_process
</UL>

<P><STRONG><a name="[ad]"></a>crm_ahb_div_set</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, at32f403a_407_crm.o(.text.crm_ahb_div_set))
<BR><BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_config
</UL>

<P><STRONG><a name="[af]"></a>crm_apb1_div_set</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, at32f403a_407_crm.o(.text.crm_apb1_div_set))
<BR><BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_config
</UL>

<P><STRONG><a name="[ae]"></a>crm_apb2_div_set</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, at32f403a_407_crm.o(.text.crm_apb2_div_set))
<BR><BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_config
</UL>

<P><STRONG><a name="[b0]"></a>crm_auto_step_mode_enable</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, at32f403a_407_crm.o(.text.crm_auto_step_mode_enable))
<BR><BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_config
</UL>

<P><STRONG><a name="[a8]"></a>crm_clock_source_enable</STRONG> (Thumb, 122 bytes, Stack size 0 bytes, at32f403a_407_crm.o(.text.crm_clock_source_enable))
<BR><BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_config
</UL>

<P><STRONG><a name="[ac]"></a>crm_flag_get</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, at32f403a_407_crm.o(.text.crm_flag_get))
<BR><BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_config
</UL>

<P><STRONG><a name="[ab]"></a>crm_hext_clock_div_set</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, at32f403a_407_crm.o(.text.crm_hext_clock_div_set))
<BR><BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_config
</UL>

<P><STRONG><a name="[a9]"></a>crm_hext_stable_wait</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, at32f403a_407_crm.o(.text.crm_hext_stable_wait))
<BR><BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_config
</UL>

<P><STRONG><a name="[82]"></a>crm_periph_clock_enable</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, at32f403a_407_crm.o(.text.crm_periph_clock_enable))
<BR><BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at32_board_init
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_clock48m_select
</UL>

<P><STRONG><a name="[aa]"></a>crm_pll_config</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, at32f403a_407_crm.o(.text.crm_pll_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = crm_pll_config
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_config
</UL>

<P><STRONG><a name="[a7]"></a>crm_reset</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, at32f403a_407_crm.o(.text.crm_reset))
<BR><BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_config
</UL>

<P><STRONG><a name="[b1]"></a>crm_sysclk_switch</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, at32f403a_407_crm.o(.text.crm_sysclk_switch))
<BR><BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_config
</UL>

<P><STRONG><a name="[b2]"></a>crm_sysclk_switch_status_get</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, at32f403a_407_crm.o(.text.crm_sysclk_switch_status_get))
<BR><BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_core_clock_update
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_config
</UL>

<P><STRONG><a name="[b4]"></a>crm_usb_clock_div_set</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, at32f403a_407_crm.o(.text.crm_usb_clock_div_set))
<BR><BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_clock48m_select
</UL>

<P><STRONG><a name="[b5]"></a>crm_usb_clock_source_select</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, at32f403a_407_crm.o(.text.crm_usb_clock_source_select))
<BR><BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_clock48m_select
</UL>

<P><STRONG><a name="[a5]"></a>flash_byte_program</STRONG> (Thumb, 270 bytes, Stack size 0 bytes, at32f403a_407_flash.o(.text.flash_byte_program))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msc_disk_write
</UL>

<P><STRONG><a name="[a6]"></a>flash_lock</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, at32f403a_407_flash.o(.text.flash_lock))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msc_disk_write
</UL>

<P><STRONG><a name="[a4]"></a>flash_sector_erase</STRONG> (Thumb, 484 bytes, Stack size 0 bytes, at32f403a_407_flash.o(.text.flash_sector_erase))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msc_disk_write
</UL>

<P><STRONG><a name="[a3]"></a>flash_unlock</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, at32f403a_407_flash.o(.text.flash_unlock))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msc_disk_write
</UL>

<P><STRONG><a name="[8e]"></a>get_inquiry</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, msc_diskio.o(.text.get_inquiry))
<BR><BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bot_scsi_cmd_process
</UL>

<P><STRONG><a name="[83]"></a>gpio_default_para_init</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, at32f403a_407_gpio.o(.text.gpio_default_para_init))
<BR><BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at32_board_init
</UL>

<P><STRONG><a name="[84]"></a>gpio_init</STRONG> (Thumb, 190 bytes, Stack size 16 bytes, at32f403a_407_gpio.o(.text.gpio_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gpio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at32_board_init
</UL>

<P><STRONG><a name="[76]"></a>main</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, main.o(.text.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = main &rArr; at32_board_init &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_connect
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_core_init
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_irq_enable
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at32_board_init
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_priority_group_config
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_periph_clock_enable
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_clock48m_select
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_config
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[8f]"></a>msc_disk_capacity</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, msc_diskio.o(.text.msc_disk_capacity))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = msc_disk_capacity
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bot_scsi_cmd_process
</UL>

<P><STRONG><a name="[95]"></a>msc_disk_read</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, msc_diskio.o(.text.msc_disk_read))
<BR><BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bot_scsi_read10
</UL>

<P><STRONG><a name="[97]"></a>msc_disk_write</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, msc_diskio.o(.text.msc_disk_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = msc_disk_write
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_lock
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_byte_program
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_sector_erase
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_unlock
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bot_scsi_write10
</UL>

<P><STRONG><a name="[a0]"></a>nvic_irq_enable</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, at32f403a_407_misc.o(.text.nvic_irq_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = nvic_irq_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9d]"></a>nvic_priority_group_config</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, at32f403a_407_misc.o(.text.nvic_priority_group_config))
<BR><BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9e]"></a>system_clock_config</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, at32f403a_407_clock.o(.text.system_clock_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = system_clock_config &rArr; system_core_clock_update
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_core_clock_update
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_sysclk_switch_status_get
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_sysclk_switch
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_auto_step_mode_enable
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_apb1_div_set
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_apb2_div_set
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_ahb_div_set
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_flag_get
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_hext_clock_div_set
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_pll_config
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_hext_stable_wait
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_clock_source_enable
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b3]"></a>system_core_clock_update</STRONG> (Thumb, 164 bytes, Stack size 16 bytes, system_at32f403a_407.o(.text.system_core_clock_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = system_core_clock_update
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_sysclk_switch_status_get
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_config
</UL>

<P><STRONG><a name="[81]"></a>systick_clock_source_config</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, at32f403a_407_misc.o(.text.systick_clock_source_config))
<BR><BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at32_board_init
</UL>

<P><STRONG><a name="[cf]"></a>usb_buffer_free</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, at32f403a_407_usb.o(.text.usb_buffer_free))
<BR><BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_irq_handler
</UL>

<P><STRONG><a name="[c7]"></a>usb_buffer_malloc</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, at32f403a_407_usb.o(.text.usb_buffer_malloc))
<BR><BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ept_buf_auto_define
</UL>

<P><STRONG><a name="[9f]"></a>usb_clock48m_select</STRONG> (Thumb, 250 bytes, Stack size 8 bytes, main.o(.text.usb_clock48m_select))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = usb_clock48m_select
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acc_calibration_mode_enable
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acc_write_c3
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acc_write_c2
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acc_write_c1
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_periph_clock_enable
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_usb_clock_source_select
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_usb_clock_div_set
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ba]"></a>usb_connect</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, at32f403a_407_usb.o(.text.usb_connect))
<BR><BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_connect
</UL>

<P><STRONG><a name="[bc]"></a>usb_dev_init</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, at32f403a_407_usb.o(.text.usb_dev_init))
<BR><BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_core_init
</UL>

<P><STRONG><a name="[c5]"></a>usb_enter_suspend</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, at32f403a_407_usb.o(.text.usb_enter_suspend))
<BR><BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_enter_suspend
</UL>

<P><STRONG><a name="[c8]"></a>usb_ept_close</STRONG> (Thumb, 218 bytes, Stack size 16 bytes, at32f403a_407_usb.o(.text.usb_ept_close))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = usb_ept_close
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ept_close
</UL>

<P><STRONG><a name="[c9]"></a>usb_ept_open</STRONG> (Thumb, 802 bytes, Stack size 28 bytes, at32f403a_407_usb.o(.text.usb_ept_open))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = usb_ept_open
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ept_open
</UL>

<P><STRONG><a name="[d1]"></a>usb_exit_suspend</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, at32f403a_407_usb.o(.text.usb_exit_suspend))
<BR><BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_irq_handler
</UL>

<P><STRONG><a name="[ce]"></a>usb_flag_clear</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, at32f403a_407_usb.o(.text.usb_flag_clear))
<BR><BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_irq_handler
</UL>

<P><STRONG><a name="[cc]"></a>usb_read_packet</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, at32f403a_407_usb.o(.text.usb_read_packet))
<BR><BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_eptn_handler
</UL>

<P><STRONG><a name="[cd]"></a>usb_set_address</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, at32f403a_407_usb.o(.text.usb_set_address))
<BR><BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_irq_handler
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_eptn_handler
</UL>

<P><STRONG><a name="[ca]"></a>usb_write_packet</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, at32f403a_407_usb.o(.text.usb_write_packet))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ept_send
</UL>

<P><STRONG><a name="[c3]"></a>usbd_clear_stall</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, usbd_core.o(.text.usbd_clear_stall))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = usbd_clear_stall
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_endpoint_request
</UL>

<P><STRONG><a name="[a2]"></a>usbd_connect</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, usbd_core.o(.text.usbd_connect))
<BR><BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_connect
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[bb]"></a>usbd_core_in_handler</STRONG> (Thumb, 234 bytes, Stack size 24 bytes, usbd_core.o(.text.usbd_core_in_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = usbd_core_in_handler &rArr; usbd_ept_send
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ept_send
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_eptn_handler
</UL>

<P><STRONG><a name="[a1]"></a>usbd_core_init</STRONG> (Thumb, 120 bytes, Stack size 16 bytes, usbd_core.o(.text.usbd_core_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = usbd_core_init
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_dev_init
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[bd]"></a>usbd_core_out_handler</STRONG> (Thumb, 154 bytes, Stack size 8 bytes, usbd_core.o(.text.usbd_core_out_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = usbd_core_out_handler &rArr; usbd_ept_send
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ept_send
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_eptn_handler
</UL>

<P><STRONG><a name="[be]"></a>usbd_core_setup_handler</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, usbd_core.o(.text.usbd_core_setup_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = usbd_core_setup_handler &rArr; usbd_interface_request &rArr; usbd_ctrl_send_status &rArr; usbd_ept_send
</UL>
<BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_interface_request
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_endpoint_request
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_device_request
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_setup_request_parse
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_eptn_handler
</UL>

<P><STRONG><a name="[9c]"></a>usbd_ctrl_send</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, usbd_core.o(.text.usbd_ctrl_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = usbd_ctrl_send &rArr; usbd_ept_send
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ept_send
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;class_setup_handler
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_endpoint_request
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_device_request
</UL>

<P><STRONG><a name="[9b]"></a>usbd_ctrl_send_status</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, usbd_core.o(.text.usbd_ctrl_send_status))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = usbd_ctrl_send_status &rArr; usbd_ept_send
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ept_send
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;class_setup_handler
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_interface_request
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_endpoint_request
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_device_request
</UL>

<P><STRONG><a name="[9a]"></a>usbd_ctrl_unsupport</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, usbd_core.o(.text.usbd_ctrl_unsupport))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = usbd_ctrl_unsupport
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;class_setup_handler
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_interface_request
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_endpoint_request
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_device_request
</UL>

<P><STRONG><a name="[c0]"></a>usbd_device_request</STRONG> (Thumb, 574 bytes, Stack size 16 bytes, usbd_sdr.o(.text.usbd_device_request))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = usbd_device_request &rArr; usbd_ctrl_send &rArr; usbd_ept_send
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ctrl_unsupport
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ctrl_send
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ctrl_send_status
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_core_setup_handler
</UL>

<P><STRONG><a name="[c1]"></a>usbd_endpoint_request</STRONG> (Thumb, 284 bytes, Stack size 16 bytes, usbd_sdr.o(.text.usbd_endpoint_request))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = usbd_endpoint_request &rArr; usbd_ctrl_send &rArr; usbd_ept_send
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ctrl_unsupport
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_set_stall
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_clear_stall
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ctrl_send
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ctrl_send_status
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_core_setup_handler
</UL>

<P><STRONG><a name="[c4]"></a>usbd_enter_suspend</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, usbd_core.o(.text.usbd_enter_suspend))
<BR><BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_enter_suspend
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_irq_handler
</UL>

<P><STRONG><a name="[c6]"></a>usbd_ept_buf_auto_define</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, usbd_core.o(.text.usbd_ept_buf_auto_define))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = usbd_ept_buf_auto_define
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_buffer_malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ept_open
</UL>

<P><STRONG><a name="[98]"></a>usbd_ept_close</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, usbd_core.o(.text.usbd_ept_close))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = usbd_ept_close &rArr; usb_ept_close
</UL>
<BR>[Calls]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_ept_close
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;class_setup_handler
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;class_clear_handler
</UL>

<P><STRONG><a name="[d0]"></a>usbd_ept_defaut_init</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, usbd_core.o(.text.usbd_ept_defaut_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = usbd_ept_defaut_init
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_irq_handler
</UL>

<P><STRONG><a name="[99]"></a>usbd_ept_open</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, usbd_core.o(.text.usbd_ept_open))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = usbd_ept_open &rArr; usb_ept_open
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ept_buf_auto_define
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_ept_open
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_irq_handler
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;class_setup_handler
<LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;class_init_handler
</UL>

<P><STRONG><a name="[88]"></a>usbd_ept_recv</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, usbd_core.o(.text.usbd_ept_recv))
<BR><BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bot_scsi_clear_feature
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bot_cbw_decode
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bot_scsi_dataout_handler
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bot_scsi_send_csw
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bot_scsi_write10
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bot_scsi_datain_handler
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bot_scsi_reset
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bot_scsi_init
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_eptn_handler
</UL>

<P><STRONG><a name="[8d]"></a>usbd_ept_send</STRONG> (Thumb, 174 bytes, Stack size 24 bytes, usbd_core.o(.text.usbd_ept_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = usbd_ept_send
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_write_packet
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bot_scsi_clear_feature
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bot_scsi_send_data
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bot_scsi_dataout_handler
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bot_scsi_send_csw
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bot_scsi_write10
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bot_scsi_read10
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bot_scsi_datain_handler
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_eptn_handler
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ctrl_send
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ctrl_send_status
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_core_out_handler
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_core_in_handler
</UL>

<P><STRONG><a name="[cb]"></a>usbd_eptn_handler</STRONG> (Thumb, 440 bytes, Stack size 24 bytes, usbd_int.o(.text.usbd_eptn_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = usbd_eptn_handler &rArr; usbd_core_setup_handler &rArr; usbd_interface_request &rArr; usbd_ctrl_send_status &rArr; usbd_ept_send
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_core_setup_handler
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_core_out_handler
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ept_recv
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ept_send
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_core_in_handler
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_set_address
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_read_packet
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_irq_handler
</UL>

<P><STRONG><a name="[86]"></a>usbd_get_recv_len</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, usbd_core.o(.text.usbd_get_recv_len))
<BR><BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;class_ept0_rx_handler
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bot_cbw_decode
</UL>

<P><STRONG><a name="[c2]"></a>usbd_interface_request</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, usbd_sdr.o(.text.usbd_interface_request))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = usbd_interface_request &rArr; usbd_ctrl_send_status &rArr; usbd_ept_send
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ctrl_unsupport
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ctrl_send_status
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_core_setup_handler
</UL>

<P><STRONG><a name="[7f]"></a>usbd_irq_handler</STRONG> (Thumb, 268 bytes, Stack size 24 bytes, usbd_int.o(.text.usbd_irq_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = usbd_irq_handler &rArr; usbd_eptn_handler &rArr; usbd_core_setup_handler &rArr; usbd_interface_request &rArr; usbd_ctrl_send_status &rArr; usbd_ept_send
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_eptn_handler
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ept_defaut_init
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_enter_suspend
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ept_open
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_flag_clear
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_buffer_free
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_exit_suspend
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_set_address
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBFS_L_CAN1_RX0_IRQHandler
</UL>

<P><STRONG><a name="[87]"></a>usbd_set_stall</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, usbd_core.o(.text.usbd_set_stall))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = usbd_set_stall
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bot_scsi_clear_feature
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bot_cbw_decode
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_endpoint_request
</UL>

<P><STRONG><a name="[bf]"></a>usbd_setup_request_parse</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, usbd_sdr.o(.text.usbd_setup_request_parse))
<BR><BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_core_setup_handler
</UL>

<P><STRONG><a name="[70]"></a>_fp_init</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, fpinit.o(x$fpl$fpinit))
<BR><BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_fp_1
</UL>

<P><STRONG><a name="[ff]"></a>__fplib_config_fpu_vfp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)

<P><STRONG><a name="[100]"></a>__fplib_config_pureend_doubles</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[0]"></a>class_init_handler</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, msc_class.o(.text.class_init_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = class_init_handler &rArr; usbd_ept_open &rArr; usb_ept_open
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bot_scsi_init
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ept_open
</UL>
<BR>[Address Reference Count : 1]<UL><LI> msc_class.o(.data.msc_class_handler)
</UL>
<P><STRONG><a name="[1]"></a>class_clear_handler</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, msc_class.o(.text.class_clear_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = class_clear_handler &rArr; usbd_ept_close &rArr; usb_ept_close
</UL>
<BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ept_close
</UL>
<BR>[Address Reference Count : 1]<UL><LI> msc_class.o(.data.msc_class_handler)
</UL>
<P><STRONG><a name="[2]"></a>class_setup_handler</STRONG> (Thumb, 156 bytes, Stack size 16 bytes, msc_class.o(.text.class_setup_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = class_setup_handler &rArr; usbd_ept_open &rArr; usb_ept_open
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bot_scsi_clear_feature
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bot_scsi_reset
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ept_close
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ept_open
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ctrl_unsupport
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ctrl_send
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ctrl_send_status
</UL>
<BR>[Address Reference Count : 1]<UL><LI> msc_class.o(.data.msc_class_handler)
</UL>
<P><STRONG><a name="[3]"></a>class_ept0_tx_handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, msc_class.o(.text.class_ept0_tx_handler))
<BR>[Address Reference Count : 1]<UL><LI> msc_class.o(.data.msc_class_handler)
</UL>
<P><STRONG><a name="[4]"></a>class_ept0_rx_handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, msc_class.o(.text.class_ept0_rx_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = class_ept0_rx_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_get_recv_len
</UL>
<BR>[Address Reference Count : 1]<UL><LI> msc_class.o(.data.msc_class_handler)
</UL>
<P><STRONG><a name="[5]"></a>class_in_handler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, msc_class.o(.text.class_in_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = class_in_handler &rArr; bot_scsi_datain_handler &rArr; bot_scsi_cmd_process &rArr; bot_scsi_write10 &rArr; msc_disk_write
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bot_scsi_datain_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> msc_class.o(.data.msc_class_handler)
</UL>
<P><STRONG><a name="[6]"></a>class_out_handler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, msc_class.o(.text.class_out_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = class_out_handler &rArr; bot_scsi_dataout_handler &rArr; bot_cbw_decode &rArr; bot_scsi_cmd_process &rArr; bot_scsi_write10 &rArr; msc_disk_write
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bot_scsi_dataout_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> msc_class.o(.data.msc_class_handler)
</UL>
<P><STRONG><a name="[7]"></a>class_sof_handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, msc_class.o(.text.class_sof_handler))
<BR>[Address Reference Count : 1]<UL><LI> msc_class.o(.data.msc_class_handler)
</UL>
<P><STRONG><a name="[8]"></a>class_event_handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, msc_class.o(.text.class_event_handler))
<BR>[Address Reference Count : 1]<UL><LI> msc_class.o(.data.msc_class_handler)
</UL>
<P><STRONG><a name="[9]"></a>get_device_descriptor</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, msc_desc.o(.text.get_device_descriptor))
<BR>[Address Reference Count : 1]<UL><LI> msc_desc.o(.data.msc_desc_handler)
</UL>
<P><STRONG><a name="[a]"></a>get_device_qualifier</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, msc_desc.o(.text.get_device_qualifier))
<BR>[Address Reference Count : 1]<UL><LI> msc_desc.o(.data.msc_desc_handler)
</UL>
<P><STRONG><a name="[b]"></a>get_device_configuration</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, msc_desc.o(.text.get_device_configuration))
<BR>[Address Reference Count : 1]<UL><LI> msc_desc.o(.data.msc_desc_handler)
</UL>
<P><STRONG><a name="[c]"></a>get_device_other_speed</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, msc_desc.o(.text.get_device_other_speed))
<BR>[Address Reference Count : 1]<UL><LI> msc_desc.o(.data.msc_desc_handler)
</UL>
<P><STRONG><a name="[d]"></a>get_device_lang_id</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, msc_desc.o(.text.get_device_lang_id))
<BR>[Address Reference Count : 1]<UL><LI> msc_desc.o(.data.msc_desc_handler)
</UL>
<P><STRONG><a name="[e]"></a>get_device_manufacturer_string</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, msc_desc.o(.text.get_device_manufacturer_string))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = get_device_manufacturer_string
</UL>
<BR>[Address Reference Count : 1]<UL><LI> msc_desc.o(.data.msc_desc_handler)
</UL>
<P><STRONG><a name="[f]"></a>get_device_product_string</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, msc_desc.o(.text.get_device_product_string))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = get_device_product_string
</UL>
<BR>[Address Reference Count : 1]<UL><LI> msc_desc.o(.data.msc_desc_handler)
</UL>
<P><STRONG><a name="[10]"></a>get_device_serial_string</STRONG> (Thumb, 128 bytes, Stack size 16 bytes, msc_desc.o(.text.get_device_serial_string))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = get_device_serial_string
</UL>
<BR>[Address Reference Count : 1]<UL><LI> msc_desc.o(.data.msc_desc_handler)
</UL>
<P><STRONG><a name="[11]"></a>get_device_interface_string</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, msc_desc.o(.text.get_device_interface_string))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = get_device_interface_string
</UL>
<BR>[Address Reference Count : 1]<UL><LI> msc_desc.o(.data.msc_desc_handler)
</UL>
<P><STRONG><a name="[12]"></a>get_device_config_string</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, msc_desc.o(.text.get_device_config_string))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = get_device_config_string
</UL>
<BR>[Address Reference Count : 1]<UL><LI> msc_desc.o(.data.msc_desc_handler)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
